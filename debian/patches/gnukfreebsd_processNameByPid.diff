Description: add processNameByPid implementation for GNU/kFreeBSD
Author: Dmitry Shachnev <mitya57@debian.org>
Forwarded: no
Last-Update: 2015-07-31

--- a/src/corelib/io/qlockfile_unix.cpp
+++ b/src/corelib/io/qlockfile_unix.cpp
@@ -56,6 +56,13 @@
 #   include <cstdio>
 #elif defined(Q_OS_BSD4) && !defined(Q_OS_IOS)
 #   include <sys/user.h>
+# ifdef __GLIBC__
+#   include <sys/cdefs.h>
+#   include <sys/param.h>
+#   include <sys/sysctl.h>
+#   include <cstdlib>
+#   include <cstring>
+# endif
 #endif
 
 QT_BEGIN_NAMESPACE
@@ -232,9 +239,27 @@
     }
     return QFileInfo(QString::fromUtf8(buf)).fileName();
 #elif defined(Q_OS_BSD4) && !defined(Q_OS_IOS)
+#ifdef __GLIBC__
+    int mib[4] = {CTL_KERN, KERN_PROC, KERN_PROC_PID, pid};
+    size_t len = 0;
+    if (sysctl(mib, 4, NULL, &len, NULL, 0) < 0)
+        return QString();
+    kinfo_proc *proc = static_cast<kinfo_proc *>(malloc(len));
+#else
     kinfo_proc *proc = kinfo_getproc(pid);
+#endif /* __GLIBC__ */
     if (!proc)
         return QString();
+#ifdef __GLIBC__
+    if (sysctl(mib, 4, proc, &len, NULL, 0) < 0) {
+        free(proc);
+        return QString();
+    }
+    if (proc->ki_pid != pid) {
+        free(proc);
+        return QString();
+    }
+#endif /* __GLIBC__ */
     QString name = QString::fromUtf8(proc->ki_comm);
     free(proc);
     return name;
