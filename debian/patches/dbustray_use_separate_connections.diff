Description: dbustray: use separate D-Bus connections for each tray icon
 This allows applications to use two or more QSystemTrayIcons.
Origin: https://code.qt.io/cgit/qt/qtbase.git/commit/?id=f199bb9133fe0446
Last-Update: 2016-08-18

--- a/src/platformsupport/dbusmenu/qdbusmenuconnection.cpp
+++ b/src/platformsupport/dbusmenu/qdbusmenuconnection.cpp
@@ -59,9 +59,10 @@
     A D-Bus connection which is used for both menu and tray icon services.
     Connects to the session bus and registers with the respective watcher services.
 */
-QDBusMenuConnection::QDBusMenuConnection(QObject *parent)
+QDBusMenuConnection::QDBusMenuConnection(QObject *parent, const QString &serviceName)
     : QObject(parent)
-    , m_connection(QDBusConnection::sessionBus())
+    , m_connection(serviceName.isNull() ? QDBusConnection::sessionBus()
+                                        : QDBusConnection::connectToBus(QDBusConnection::SessionBus, serviceName))
     , m_dbusWatcher(new QDBusServiceWatcher(StatusNotifierWatcherService, m_connection, QDBusServiceWatcher::WatchForRegistration, this))
     , m_statusNotifierHostRegistered(false)
 {
--- a/src/platformsupport/dbusmenu/qdbusmenuconnection_p.h
+++ b/src/platformsupport/dbusmenu/qdbusmenuconnection_p.h
@@ -61,7 +61,7 @@
     Q_OBJECT
 
 public:
-    QDBusMenuConnection(QObject *parent = 0);
+    QDBusMenuConnection(QObject *parent = 0, const QString &serviceName = QString());
     QDBusConnection connection() const { return m_connection; }
     bool isStatusNotifierHostRegistered() const { return m_statusNotifierHostRegistered; }
 #ifndef QT_NO_SYSTEMTRAYICON
--- a/src/platformsupport/dbustray/qdbustrayicon.cpp
+++ b/src/platformsupport/dbustray/qdbustrayicon.cpp
@@ -165,7 +165,7 @@
 QDBusMenuConnection * QDBusTrayIcon::dBusConnection()
 {
     if (!m_dbusConnection) {
-        m_dbusConnection = new QDBusMenuConnection(this);
+        m_dbusConnection = new QDBusMenuConnection(this, m_instanceId);
         m_notifier = new QXdgNotificationInterface(XdgNotificationService,
             XdgNotificationPath, m_dbusConnection->connection(), this);
         connect(m_notifier, SIGNAL(NotificationClosed(uint,uint)), this, SLOT(notificationClosed(uint,uint)));
